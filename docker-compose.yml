version: '3.8'

services:
  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    command: ["--config=/etc/otel-collector-config.yml"]
    volumes:
      - ./otel-collector-config.yml:/etc/otel-collector-config.yml
    ports:
      - "4317:4317"   # OTLP gRPC
      - "4318:4318"   # OTLP HTTP
      - "13133:13133" # Health check
    environment:
      - NEW_RELIC_LICENSE_KEY=${NEW_RELIC_LICENSE_KEY}
    networks:
      - saas-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    env_file:
      - .env
    environment:
      - ENVIRONMENT=production
      - DEBUG=false
      - OTEL_ENABLED=true
      - OTEL_SERVICE_NAME=saas-platform-backend
      # Traces
      - OTEL_EXPORTER_OTLP_TRACES_ENDPOINT=http://otel-collector:4317
      - OTEL_EXPORTER_OTLP_TRACES_PROTOCOL=grpc
      - OTEL_EXPORTER_OTLP_TRACES_INSECURE=true
      # Metrics
      - OTEL_EXPORTER_OTLP_METRICS_ENDPOINT=http://otel-collector:4317
      - OTEL_EXPORTER_OTLP_METRICS_PROTOCOL=grpc
      - OTEL_EXPORTER_OTLP_METRICS_INSECURE=true
      # Logs
      - OTEL_EXPORTER_OTLP_LOGS_ENDPOINT=http://otel-collector:4317
      - OTEL_EXPORTER_OTLP_LOGS_PROTOCOL=grpc
      - OTEL_EXPORTER_OTLP_LOGS_INSECURE=true
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - saas-network
    depends_on:
      - otel-collector

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - NEXT_PUBLIC_SUPABASE_URL=${NEXT_PUBLIC_SUPABASE_URL}
        - NEXT_PUBLIC_SUPABASE_ANON_KEY=${NEXT_PUBLIC_SUPABASE_ANON_KEY}
        - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}
        - NEXT_PUBLIC_OTEL_ENABLED=${NEXT_PUBLIC_OTEL_ENABLED}
        - NEXT_PUBLIC_OTEL_SERVICE_NAME=${NEXT_PUBLIC_OTEL_SERVICE_NAME}
        - NEXT_PUBLIC_OTEL_EXPORTER_OTLP_TRACES_ENDPOINT=${NEXT_PUBLIC_OTEL_EXPORTER_OTLP_TRACES_ENDPOINT}
        - NEXT_PUBLIC_OTEL_EXPORTER_OTLP_TRACES_PROTOCOL=${NEXT_PUBLIC_OTEL_EXPORTER_OTLP_TRACES_PROTOCOL}
        - NEXT_PUBLIC_OTEL_EXPORTER_OTLP_METRICS_ENDPOINT=${NEXT_PUBLIC_OTEL_EXPORTER_OTLP_METRICS_ENDPOINT}
        - NEXT_PUBLIC_OTEL_EXPORTER_OTLP_METRICS_PROTOCOL=${NEXT_PUBLIC_OTEL_EXPORTER_OTLP_METRICS_PROTOCOL}
        - NEXT_PUBLIC_OTEL_EXPORTER_OTLP_LOGS_ENDPOINT=${NEXT_PUBLIC_OTEL_EXPORTER_OTLP_LOGS_ENDPOINT}
        - NEXT_PUBLIC_OTEL_EXPORTER_OTLP_LOGS_PROTOCOL=${NEXT_PUBLIC_OTEL_EXPORTER_OTLP_LOGS_PROTOCOL}
    ports:
      - "3000:3000"
    env_file:
      - .env
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://backend:8000
      - NEXT_PUBLIC_APP_NAME=SaaS Platform
      # Explicitly set Supabase environment variables
      - NEXT_PUBLIC_SUPABASE_URL=${NEXT_PUBLIC_SUPABASE_URL}
      - NEXT_PUBLIC_SUPABASE_ANON_KEY=${NEXT_PUBLIC_SUPABASE_ANON_KEY}
      - NEXT_PUBLIC_OTEL_ENABLED=${NEXT_PUBLIC_OTEL_ENABLED}
      - NEXT_PUBLIC_OTEL_SERVICE_NAME=${NEXT_PUBLIC_OTEL_SERVICE_NAME}
      - NEXT_PUBLIC_OTEL_EXPORTER_OTLP_TRACES_ENDPOINT=${NEXT_PUBLIC_OTEL_EXPORTER_OTLP_TRACES_ENDPOINT}
      - NEXT_PUBLIC_OTEL_EXPORTER_OTLP_TRACES_PROTOCOL=${NEXT_PUBLIC_OTEL_EXPORTER_OTLP_TRACES_PROTOCOL}
      # Metrics
      - NEXT_PUBLIC_OTEL_EXPORTER_OTLP_METRICS_ENDPOINT=${NEXT_PUBLIC_OTEL_EXPORTER_OTLP_METRICS_ENDPOINT}
      - NEXT_PUBLIC_OTEL_EXPORTER_OTLP_METRICS_PROTOCOL=${NEXT_PUBLIC_OTEL_EXPORTER_OTLP_METRICS_PROTOCOL}
      # Logs
      - NEXT_PUBLIC_OTEL_EXPORTER_OTLP_LOGS_ENDPOINT=${NEXT_PUBLIC_OTEL_EXPORTER_OTLP_LOGS_ENDPOINT}
      - NEXT_PUBLIC_OTEL_EXPORTER_OTLP_LOGS_PROTOCOL=${NEXT_PUBLIC_OTEL_EXPORTER_OTLP_LOGS_PROTOCOL}
    depends_on:
      - backend
      - otel-collector
    networks:
      - saas-network

networks:
  saas-network:
    driver: bridge